gene_support[gene_support == 10] %>% labels()
gene_support[gene_support == 9] %>% labels()
gene_support[gene_support == 8] %>% labels()
gene_support[gene_support == 7] %>% labels()
gene_support[gene_support == 6] %>% labels()
gene_support[gene_support == 5] %>% labels()
probeIDs2GeneNames <- function(probeIDs){
probeIDs <- sapply(na.omit(probeIDs),function(x) gsub("^X","", x))
return(toupper(unique(as.character(na.omit(lookUp(probeIDs, "hgu133a2.db", "SYMBOL")))))
}
return(toupper(unique(as.character(na.omit(lookUp(probeIDs, "hgu133a2.db", "SYMBOL"))))))
probeIDs2GeneNames <- function(probeIDs){
probeIDs <- sapply(na.omit(probeIDs),function(x) gsub("^X","", x))
return(toupper(unique(as.character(na.omit(lookUp(probeIDs, "hgu133a2.db", "SYMBOL"))))))
}
gene_lists <- list(
#[1] "Subchallenge2_aydin_Time0_svm_cfsmr_joint2_Leatherboard.csv" (no predictors)
Rchow = probeIDs2GeneNames(unique(unlist(data[2][[1]][1]))),  #[2] "Subchallenge2_Rchow_Time24_Predictors.csv"
Aganita = toupper(unique(unlist(data[3][[1]][2]))),  #[3] "Subchallenge3_Aganita_Time24_Predictors.csv"
aydin = probeIDs2GeneNames(unique(unlist(data[4][[1]][2]))),  #[4] "Subchallenge3_aydin_Time24_Predictors.csv"
burkhajo = probeIDs2GeneNames(unique(unlist(data[5][[1]][1]))),  #[5] "Subchallenge3_burkhajo_Time24_Predictors.csv"
ChengzheTian = probeIDs2GeneNames(unique(unlist(data[6][[1]][1]))),  #[6] "Subchallenge3_ChengzheTian_Time24_Predictors.csv"
cwruPatho = probeIDs2GeneNames(unique(unlist(data[7][[1]][2]))),  #[7] "Subchallenge3_cwruPatho_Time24_Predictors.csv"
JayHawks = probeIDs2GeneNames(unique(unlist(data[8][[1]][2]))),  #[8] "Subchallenge3_JayHawks-RVDC_Time24_Predictors.csv"
jdn = probeIDs2GeneNames(unique(sapply(unlist(data[9][[1]][1]), function(x) gsub("_max","",x)))),  #[9] "Subchallenge3_jdn_Time24_Predictors.csv"
jhou = probeIDs2GeneNames(unique(unlist(data[10][[1]][1]))), #[10] "Subchallenge3_jhou_Time24_Predictors.csv"
#[11] "Subchallenge3_SBiE_KAIST_Time24_Predictors.csv" (no predictors)
SchrodingersCat = probeIDs2GeneNames(unique(unlist(data[12][[1]][1]))), #[12] "Subchallenge3_SchrodingersCat_Time24_Predictors.csv"
Shosty = toupper(unique(unlist(data[13][[1]][1]))), #[13] "Subchallenge3_Shosty_UpToHour24_Predictors.csv"
SSNDREAMTEAM = probeIDs2GeneNames(unique(unlist(data[14][[1]][2]))), #[14] "Subchallenge3_SSN DREAM TEAM-24_Predictors.csv"
SunilKumar = probeIDs2GeneNames(unique(unlist(data[15][[1]][1]))), #[15] "Subchallenge3_SunilKumar_Time24_Predictors.csv"
TempleDABI = probeIDs2GeneNames(unique(unlist(data[16][[1]][1]))), #[16] "Subchallenge3_TempleDABI_Time24_Predictors.csv"
USPteam = probeIDs2GeneNames(unique(as.character(sapply(data[17][[1]][1], function(x) gsub("\'", "", x))))), #[17] "subchallenge3_USP team_time24_Predictors.csv"    (quotes)
ViResPred = probeIDs2GeneNames(unique(unlist(data[18][[1]][2]))) #[18] "Subchallenge3_ViResPred_Time24_Predictors.csv"
#[19] "subf33.csv" (no predictors)
)
predictor_counts_df <- data.frame(
study = names(gene_lists),
predictor_count = as.numeric(summary(gene_lists)[,1])
)
predictor_counts_df %>%
ggplot(aes(x=reorder(study,-predictor_count),
y=predictor_count)) +
geom_bar(stat="identity") +
geom_text(label=predictor_counts_df$predictor_count,vjust=-1,size=3) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylim(0,13000) +
xlab("study name") +
ylab("gene count (# genes)")
gene_intersect <- Reduce(intersect, list(
unlist(gene_lists[1]),
unlist(gene_lists[2]),
unlist(gene_lists[3]),
unlist(gene_lists[4]),
unlist(gene_lists[5]),
unlist(gene_lists[6]),
unlist(gene_lists[7]),
unlist(gene_lists[8]),
unlist(gene_lists[9]),
unlist(gene_lists[10]),
unlist(gene_lists[11]),
unlist(gene_lists[12]),
unlist(gene_lists[13]),
unlist(gene_lists[14]),
unlist(gene_lists[15]),
unlist(gene_lists[16])))
print(paste("length(gene_intersect):",length(gene_intersect),sep=" "))
gene_union <- Reduce(union, list(
unlist(gene_lists[1]),
unlist(gene_lists[2]),
unlist(gene_lists[3]),
unlist(gene_lists[4]),
unlist(gene_lists[5]),
unlist(gene_lists[6]),
unlist(gene_lists[7]),
unlist(gene_lists[8]),
unlist(gene_lists[9]),
unlist(gene_lists[10]),
unlist(gene_lists[11]),
unlist(gene_lists[12]),
unlist(gene_lists[13]),
unlist(gene_lists[14]),
unlist(gene_lists[15]),
unlist(gene_lists[16])))
print(paste("length(gene_union):",length(gene_union),sep=" "))
gene_support <- table(c(unlist(gene_lists[1]),
unlist(gene_lists[2]),
unlist(gene_lists[3]),
unlist(gene_lists[4]),
unlist(gene_lists[5]),
unlist(gene_lists[6]),
unlist(gene_lists[7]),
unlist(gene_lists[8]),
unlist(gene_lists[9]),
unlist(gene_lists[10]),
unlist(gene_lists[11]),
unlist(gene_lists[12]),
unlist(gene_lists[13]),
unlist(gene_lists[14]),
unlist(gene_lists[15]),
unlist(gene_lists[16])))
predictor_support_df %>%
ggplot(aes(x=reorder(predictor_support.Freq,-predictor_support.Freq))) +
geom_bar(stat="count") +
geom_text(stat="count",aes(label=..count..),vjust=-1,size=3) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylim(0,9000) +
xlab("gene support (# studies including gene)") +
ylab("gene count (# genes)")
gene_support[gene_support == 10] %>% class()
gene_support[gene_support == 10] %>% labels() %>% class()
gene_support[gene_support == 10] %>% labels()
GOBarplot <- function(all_gene_symbols,query_gene_symbols){
entrez_universe <- select(org.Hs.eg.db, all_gene_symbols, "ENTREZID", "SYMBOL")
entrez_query <- select(org.Hs.eg.db, gene_symbols, "ENTREZID", "SYMBOL")
hgCutoff <- 0.001
params <- new("GOHyperGParams",
geneIds=entrez_query,
universeGeneIds=entrez_universe,
annotation="hgu133a2.db",
ontology="BP",
pvalueCutoff=hgCutoff,
conditional=FALSE,
testDirection="over")
hgOver <- hyperGTest(params)
hgOverAtLeast2GenesPerGOCategory <- hgOver %>% summary(categorySize=2)
hgOverSummary <- hgOver %>% summary()
qc_df <- data.frame(
Ontology=as.character(hgOverAtLeast2GenesPerGOCategory$Term),
log10.p.value=log10(hgOverAtLeast2GenesPerGOCategory$Pvalue)
)
qc_df %>% dplyr::slice(1:30) %>% ggplot(
aes(x=reorder(Ontology,-log10.p.value),y=-log10.p.value)) +
theme(legend.position="none") +
geom_bar(stat="identity", fill=p_color) +
geom_text(position="stack",aes(label=round(-log10.p.value,digits=3),hjust=1.1)) +
coord_flip() +
labs(x="GO Biological Function",y="-log10(p-value)",title=p_title) %>%
return()
}
GOBarplot(gene_union,gene_support[gene_support == 10])
GOBarplot <- function(all_gene_symbols,query_gene_symbols){
entrez_universe <- select(org.Hs.eg.db, all_gene_symbols, "ENTREZID", "SYMBOL")
entrez_query <- select(org.Hs.eg.db, query_gene_symbols, "ENTREZID", "SYMBOL")
hgCutoff <- 0.001
params <- new("GOHyperGParams",
geneIds=entrez_query,
universeGeneIds=entrez_universe,
annotation="hgu133a2.db",
ontology="BP",
pvalueCutoff=hgCutoff,
conditional=FALSE,
testDirection="over")
hgOver <- hyperGTest(params)
hgOverAtLeast2GenesPerGOCategory <- hgOver %>% summary(categorySize=2)
hgOverSummary <- hgOver %>% summary()
qc_df <- data.frame(
Ontology=as.character(hgOverAtLeast2GenesPerGOCategory$Term),
log10.p.value=log10(hgOverAtLeast2GenesPerGOCategory$Pvalue)
)
qc_df %>% dplyr::slice(1:30) %>% ggplot(
aes(x=reorder(Ontology,-log10.p.value),y=-log10.p.value)) +
theme(legend.position="none") +
geom_bar(stat="identity", fill=p_color) +
geom_text(position="stack",aes(label=round(-log10.p.value,digits=3),hjust=1.1)) +
coord_flip() +
labs(x="GO Biological Function",y="-log10(p-value)",title=p_title) %>%
return()
}
GOBarplot(gene_union,gene_support[gene_support == 10])
GOBarplot(gene_union,as.character(gene_support[gene_support == 10]))
gene_union
gene_union %>% class()
GOBarplot <- function(all_gene_symbols,query_gene_symbols){
entrez_universe <- select(org.Hs.eg.db, all_gene_symbols, "ENTREZID", "SYMBOL")
entrez_query <- select(org.Hs.eg.db, query_gene_symbols, "ENTREZID", "SYMBOL")
entrez_universe <- entrez_universe[!duplicated(entrez_universe[,1]), 2]
entrez_query <- entrez_query[!duplicated(entrez_query[,1]), 2]
hgCutoff <- 0.001
params <- new("GOHyperGParams",
geneIds=entrez_query,
universeGeneIds=entrez_universe,
annotation="hgu133a2.db",
ontology="BP",
pvalueCutoff=hgCutoff,
conditional=FALSE,
testDirection="over")
hgOver <- hyperGTest(params)
hgOverAtLeast2GenesPerGOCategory <- hgOver %>% summary(categorySize=2)
hgOverSummary <- hgOver %>% summary()
qc_df <- data.frame(
Ontology=as.character(hgOverAtLeast2GenesPerGOCategory$Term),
log10.p.value=log10(hgOverAtLeast2GenesPerGOCategory$Pvalue)
)
qc_df %>% dplyr::slice(1:30) %>% ggplot(
aes(x=reorder(Ontology,-log10.p.value),y=-log10.p.value)) +
theme(legend.position="none") +
geom_bar(stat="identity", fill=p_color) +
geom_text(position="stack",aes(label=round(-log10.p.value,digits=3),hjust=1.1)) +
coord_flip() +
labs(x="GO Biological Function",y="-log10(p-value)",title=p_title) %>%
return()
}
GOBarplot(gene_union,as.character(gene_support[gene_support == 10]))
as.character(gene_support[gene_support == 10])
gene_support[gene_support == 10]
labels(gene_support[gene_support == 10])
labels(gene_support[gene_support == 10]) %>% class()
GOBarplot(gene_union,as.character(labels(gene_support[gene_support == 10])))
gene_union
as.character(labels(gene_support[gene_support == 10]))
GOBarplot(gene_union,labels(gene_support[gene_support == 10]))
gene_support[gene_support == 9] %>% names()
GOBarplot(gene_union,names(unlist((gene_support[gene_support == 10]))))
install.packages("GOstats")
source("https://bioconductor.org/biocLite.R")
biocLite("GOstats")
library(GOstats)
GOBarplot(gene_union,names(unlist((gene_support[gene_support == 10]))))
GOBarplot <- function(all_gene_symbols,query_gene_symbols){
entrez_universe <- select(org.Hs.eg.db, all_gene_symbols, "ENTREZID", "SYMBOL")
entrez_query <- select(org.Hs.eg.db, query_gene_symbols, "ENTREZID", "SYMBOL")
entrez_universe <- entrez_universe[!duplicated(entrez_universe[,1]), 2]
entrez_query <- entrez_query[!duplicated(entrez_query[,1]), 2]
hgCutoff <- 0.001
params <- new("GOHyperGParams",
geneIds=entrez_query,
universeGeneIds=entrez_universe,
annotation="hgu133a2.db",
ontology="BP",
pvalueCutoff=hgCutoff,
conditional=FALSE,
testDirection="over")
hgOver <- hyperGTest(params)
hgOverAtLeast2GenesPerGOCategory <- hgOver %>% summary(categorySize=2)
hgOverSummary <- hgOver %>% summary()
qc_df <- data.frame(
Ontology=as.character(hgOverAtLeast2GenesPerGOCategory$Term),
log10.p.value=log10(hgOverAtLeast2GenesPerGOCategory$Pvalue)
)
qc_df %>% dplyr::slice(1:30) %>% ggplot(
aes(x=reorder(Ontology,-log10.p.value),y=-log10.p.value)) +
theme(legend.position="none") +
geom_bar(stat="identity", fill="blue") +
geom_text(position="stack",aes(label=round(-log10.p.value,digits=3),hjust=1.1)) +
coord_flip() +
labs(x="GO Biological Function",y="-log10(p-value)",title="support = 10!") %>%
return()
}
GOBarplot(gene_union,names(unlist((gene_support[gene_support == 10]))))
GOBarplot <- function(all_gene_symbols,query_gene_symbols,bar_color,plot_title){
entrez_universe <- select(org.Hs.eg.db, all_gene_symbols, "ENTREZID", "SYMBOL")
entrez_query <- select(org.Hs.eg.db, query_gene_symbols, "ENTREZID", "SYMBOL")
entrez_universe <- entrez_universe[!duplicated(entrez_universe[,1]), 2]
entrez_query <- entrez_query[!duplicated(entrez_query[,1]), 2]
hgCutoff <- 0.001
params <- new("GOHyperGParams",
geneIds=entrez_query,
universeGeneIds=entrez_universe,
annotation="hgu133a2.db",
ontology="BP",
pvalueCutoff=hgCutoff,
conditional=FALSE,
testDirection="over")
hgOver <- hyperGTest(params)
hgOverAtLeast2GenesPerGOCategory <- hgOver %>% summary(categorySize=2)
hgOverSummary <- hgOver %>% summary()
qc_df <- data.frame(
Ontology=as.character(hgOverAtLeast2GenesPerGOCategory$Term),
log10.p.value=log10(hgOverAtLeast2GenesPerGOCategory$Pvalue)
)
qc_df %>% dplyr::slice(1:30) %>% ggplot(
aes(x=reorder(Ontology,-log10.p.value),y=-log10.p.value)) +
theme(legend.position="none") +
geom_bar(stat="identity", fill=bar_color) +
geom_text(position="stack",aes(label=round(-log10.p.value,digits=3),hjust=1.1)) +
coord_flip() +
labs(x="GO Biological Function",y="-log10(p-value)",title=plot_title) %>%
return()
}
GOBarplot(gene_union,names(unlist((gene_support[gene_support == 10]))),"yellow","GO Biological Processes supported by 10 studies")
hgu133a2.db
hgu133a2ENTREZID
hgu133a2ENTREZID %>% View()
hgu133a2ENTREZID$gene_id
hgu133a2ENTREZID[["gene_id"]]
hgu133a2ENTREZID %>% summary()
hgu133a2ENTREZID[,1]
hgu133a2ENTREZID[,2]
hgu133a2ENTREZID %>% as.list() %>% View()
hgu133a2ENTREZID %>% as.character() %>% View()
hgu133a2ENTREZID %>% as.list() %>% unlist() %>% View()
hgu133a2ENTREZID %>% as.list() %>% View()
hgu133a2ENTREZID %>% as.matrix() %>% View()
hgu133a2ENTREZID %>% as.list() %>% as.matrix() %>% View()
hgu133a2ENTREZID %>% as.list() %>% as.matrix() %>% .[1] %>% View()
hgu133a2ENTREZID %>% as.list() %>% as.matrix() %>% .[,1] %>% View()
hgu133a2ENTREZID %>% as.list() %>% as.matrix() %>% .[,1] %>% class()
hgu133a2ENTREZID %>% as.list() %>% as.matrix() %>% .[,1] %>% as.character() %>% View()
hgu133a2ENTREZID %>% class()
select(hgu133a2.db,columns = c("SYMBOL"))
ls(hgu133a2ENTREZID) %>% class()
ls(hgu133a2ENTREZID)
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID))
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="SYMBOL")
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="SYMBOL") %>% class()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="SYMBOL") %>% colnames()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="SYMBOL") %>% dplyr::select(SYMBOL)
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="SYMBOL") %>% dplyr::select(SYMBOL) %>% class()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="SYMBOL") %>% dplyr::select(SYMBOL) %>% as.character()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="SYMBOL") %>% dplyr::select(SYMBOL) %>% as.vector()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="SYMBOL") %>% dplyr::select(SYMBOL) %>% as.vector() %>% class()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="SYMBOL") %>% .[SYMBOL]
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="SYMBOL") %>% .[,"SYMBOL"]
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="SYMBOL") %>% .[,"SYMBOL"] %>% class()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="SYMBOL") %>% .[,"ENTREZ"] %>% class()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="SYMBOL") %>% .[,"ENTREZID"] %>% class()
SYMBOL_UNIVERSE <- select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="SYMBOL") %>% .[,"SYMBOL"]
ENTREZ_UNIVERSE <- select(org.Hs.eg.db, SYMBOL_UNIVERSE, "ENTREZID", "SYMBOL")
SYMBOL_UNIVERSE <- select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="SYMBOL") %>% .[,"SYMBOL"]
SYMBOL_UNIVERSE <- select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="SYMBOL") %>% .[,"ENTREZID"]
SYMBOL_UNIVERSE <- select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% .[,"ENTREZID"]
ENTREZ_UNIVERSE <- select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% .[,"ENTREZID"]
GOBarplot <- function(query_gene_symbols,bar_color,plot_title){
entrez_universe <- ENTREZ_UNIVERSE
entrez_query <- select(org.Hs.eg.db, query_gene_symbols, "ENTREZID", "SYMBOL")
entrez_universe <- entrez_universe[!duplicated(entrez_universe[,1]), 2]
entrez_query <- entrez_query[!duplicated(entrez_query[,1]), 2]
hgCutoff <- 0.001
params <- new("GOHyperGParams",
geneIds=entrez_query,
universeGeneIds=entrez_universe,
annotation="hgu133a2.db",
ontology="BP",
pvalueCutoff=hgCutoff,
conditional=FALSE,
testDirection="over")
hgOver <- hyperGTest(params)
hgOverAtLeast2GenesPerGOCategory <- hgOver %>% summary(categorySize=2)
hgOverSummary <- hgOver %>% summary()
qc_df <- data.frame(
Ontology=as.character(hgOverAtLeast2GenesPerGOCategory$Term),
log10.p.value=log10(hgOverAtLeast2GenesPerGOCategory$Pvalue)
)
qc_df %>% dplyr::slice(1:30) %>% ggplot(
aes(x=reorder(Ontology,-log10.p.value),y=-log10.p.value)) +
theme(legend.position="none") +
geom_bar(stat="identity", fill=bar_color) +
geom_text(position="stack",aes(label=round(-log10.p.value,digits=3),hjust=1.1)) +
coord_flip() +
labs(x="GO Biological Function",y="-log10(p-value)",title=plot_title) %>%
return()
}
GOBarplot(names(unlist((gene_support[gene_support == 10]))),"yellow","GO Biological Processes supported by 10 studies")
ENTREZ_UNIVERSE %>% View()
unlist(ENTREZ_UNIVERSE)
unlist(ENTREZ_UNIVERSE) %>% View()
unlist(ENTREZ_UNIVERSE) %>% dim()
ENTREZ_UNIVERSE %>% class()
ENTREZ_UNIVERSE %>% length()
ENTREZ_UNIVERSE %>% unique() %>% length()
ENTREZ_UNIVERSE <- select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% .[,"ENTREZID"] %>% unique()
GOBarplot <- function(query_gene_symbols,bar_color,plot_title){
entrez_universe <- ENTREZ_UNIVERSE
entrez_query <- select(org.Hs.eg.db, query_gene_symbols, "ENTREZID", "SYMBOL")
entrez_universe <- entrez_universe[!duplicated(entrez_universe[,1]), 2]
entrez_query <- entrez_query[!duplicated(entrez_query[,1]), 2]
hgCutoff <- 0.001
params <- new("GOHyperGParams",
geneIds=entrez_query,
universeGeneIds=entrez_universe,
annotation="hgu133a2.db",
ontology="BP",
pvalueCutoff=hgCutoff,
conditional=FALSE,
testDirection="over")
hgOver <- hyperGTest(params)
hgOverAtLeast2GenesPerGOCategory <- hgOver %>% summary(categorySize=2)
hgOverSummary <- hgOver %>% summary()
qc_df <- data.frame(
Ontology=as.character(hgOverAtLeast2GenesPerGOCategory$Term),
log10.p.value=log10(hgOverAtLeast2GenesPerGOCategory$Pvalue)
)
qc_df %>% dplyr::slice(1:30) %>% ggplot(
aes(x=reorder(Ontology,-log10.p.value),y=-log10.p.value)) +
theme(legend.position="none") +
geom_bar(stat="identity", fill=bar_color) +
geom_text(position="stack",aes(label=round(-log10.p.value,digits=3),hjust=1.1)) +
coord_flip() +
labs(x="GO Biological Function",y="-log10(p-value)",title=plot_title) %>%
return()
}
GOBarplot(names(unlist((gene_support[gene_support == 10]))),"yellow","GO Biological Processes supported by 10 studies")
ENTREZ_UNIVERSE %>% class()
ENTREZ_UNIVERSE %>% unname() %>% View()
ENTREZ_UNIVERSE %>% unname()
ENTREZ_UNIVERSE %>% unname() %>% class()
ENTREZ_UNIVERSE %>% unname() %>% View()
ENTREZ_UNIVERSE %>% unname(force=TRUE) %>% View()
ENTREZ_UNIVERSE <- select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% unname() %>% .[,"ENTREZID"] %>% unique()
ENTREZ_UNIVERSE %>% View()
ENTREZ_UNIVERSE %>% class()
ENTREZ_UNIVERSE <- select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% unname() %>% .[,2] %>% unique()
ENTREZ_UNIVERSE
ENTREZ_UNIVERSE %>% View()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% unname() %>% View()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% View()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% .[,"ENTREZID"] %>% View()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% .[,"ENTREZID"]
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% .[,"ENTREZID"] %>% na.omit() %>% View()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% .[,"ENTREZID"] %>% unique()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% .[,"ENTREZID"] %>% unique() %>% View()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% .[,"ENTREZID"] %>% unique() %>% unname() %>% View()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% as.matrix() %>% View()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% as.matrix() %>% .[,"ENTREZID"]
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% as.matrix() %>% .[,"ENTREZID"] %>% View()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% as.matrix() %>% .[,"ENTREZID"] %>% class()
select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% as.matrix() %>% .[,"ENTREZID"] %>% unname() %>% View()
ENTREZ_UNIVERSE <- select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% dplyr::select(ENTREZID)
ENTREZ_UNIVERSE %>% View()
ENTREZ_UNIVERSE %>% unique() %>% View()
ENTREZ_UNIVERSE %>% unique() %>% as.vector() %>% View()
ENTREZ_UNIVERSE %>% unique() %>% as.vector() %>% class()
ENTREZ_UNIVERSE %>% unique() %>% as.character() %>% class()
ENTREZ_UNIVERSE %>% unique() %>% as.character() %>% View()
ENTREZ_UNIVERSE <- select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% dplyr::mutate(ENTREZID = as.character(ENTREZID))
ENTREZ_UNIVERSE %>% View()
ENTREZ_UNIVERSE %>% unique() %>% as.character() %>% View()
ENTREZ_UNIVERSE %>% unique() %>% View()
ENTREZ_UNIVERSE %>% unique() %>% as.vector() View()
ENTREZ_UNIVERSE %>% unique() %>% as.vector() %>% View()
ENTREZ_UNIVERSE %>% unique() %>% as.vector() %>% .[,2] %>% View()
ENTREZ_UNIVERSE %>% unique() %>% as.vector() %>% .[,2] %>% unique() %>% View()
ENTREZ_UNIVERSE %>% unique() %>% as.list()
ENTREZ_UNIVERSE %>% unique() %>% as.list() %>% View()
ENTREZ_UNIVERSE %>% unique() %>% as.list() %>% as.character() %>% View()
ENTREZ_UNIVERSE %>% class()
ENTREZ_UNIVERSE$ENTREZID %>% class()
ENTREZ_UNIVERSE$ENTREZID %>% View()
ENTREZ_UNIVERSE$ENTREZID %>% names()
ENTREZ_UNIVERSE$ENTREZID %>% colname()
ENTREZ_UNIVERSE$ENTREZID %>% colnames()
ENTREZ_UNIVERSE$ENTREZID %>% rownames()
ENTREZ_UNIVERSE$ENTREZID %>% unname()
ENTREZ_UNIVERSE$ENTREZID %>% unname() %>% class()
ENTREZ_UNIVERSE$ENTREZID %>% unname() %>% View()
ENTREZ_UNIVERSE$ENTREZID %>% unname() %>% dim()
ENTREZ_UNIVERSE %>% dim()
ENTREZ_UNIVERSE$PROBEID %>% unique()
ENTREZ_UNIVERSE$PROBEID %>% unique() %>% length()
ENTREZ_UNIVERSE$ENTREZID %>% unique() %>% length()
ENTREZ_UNIVERSE <- select(hgu133a2.db,keys=ls(hgu133a2ENTREZID),columns="ENTREZID") %>% .[,"ENTREZID"]
ENTREZ_UNIVERSE
ENTREZ_UNIVERSE %>% class()
entrez_universe <- ENTREZ_UNIVERSE
entrez_universe
!duplicated(entrez_universe[,1])
!duplicated(entrez_universe[,2])
!duplicated(entrez_universe[1])
!duplicated(entrez_universe)
entrez_universe <- entrez_universe[!duplicated(entrez_universe)]
entrez_universe %>% length()
GOBarplot <- function(query_gene_symbols,bar_color,plot_title){
entrez_universe <- ENTREZ_UNIVERSE
entrez_query <- select(org.Hs.eg.db, query_gene_symbols, "ENTREZID", "SYMBOL")
entrez_universe <- entrez_universe[!duplicated(entrez_universe)]
entrez_query <- entrez_query[!duplicated(entrez_query[,1]), 2]
hgCutoff <- 0.001
params <- new("GOHyperGParams",
geneIds=entrez_query,
universeGeneIds=entrez_universe,
annotation="hgu133a2.db",
ontology="BP",
pvalueCutoff=hgCutoff,
conditional=FALSE,
testDirection="over")
hgOver <- hyperGTest(params)
hgOverAtLeast2GenesPerGOCategory <- hgOver %>% summary(categorySize=2)
hgOverSummary <- hgOver %>% summary()
qc_df <- data.frame(
Ontology=as.character(hgOverAtLeast2GenesPerGOCategory$Term),
log10.p.value=log10(hgOverAtLeast2GenesPerGOCategory$Pvalue)
)
qc_df %>% dplyr::slice(1:30) %>% ggplot(
aes(x=reorder(Ontology,-log10.p.value),y=-log10.p.value)) +
theme(legend.position="none") +
geom_bar(stat="identity", fill=bar_color) +
geom_text(position="stack",aes(label=round(-log10.p.value,digits=3),hjust=1.1)) +
coord_flip() +
labs(x="GO Biological Function",y="-log10(p-value)",title=plot_title) %>%
return()
}
GOBarplot(names(unlist((gene_support[gene_support == 10]))),"yellow","GO Biological Processes supported by 10 studies")
GOBarplot(names(unlist((gene_support[gene_support == 9]))),"yellow","GO Biological Processes supported by 10 studies")
GOBarplot(names(unlist((gene_support[gene_support == 9]))),"yellow","GO Biological Processes supported by 9 studies")
View(predictor_support_df)
predictor_support_df <- predictor_support_df %>% dplyr::filter(predictor != "NA") # not sure how NA's got in here
predictor_support_df <- data.frame(
predictor = names(gene_support),
predictor_support = gene_support
)
predictor_support_df <- predictor_support_df %>% dplyr::filter(predictor != "NA") # not sure how NA's got in here
predictor_support_df
predictor_support_df %>% View()
predictor_support_df %>%
ggplot(aes(x=reorder(predictor_support.Freq,-predictor_support.Freq))) +
geom_bar(stat="count") +
geom_text(stat="count",aes(label=..count..),vjust=-1,size=3) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylim(0,9000) +
xlab("gene support (# studies including gene)") +
ylab("gene count (# genes)")
